@use 'assets/fe-styles/theme' with ($scope: 'switch');
@use 'assets/fe-styles/utils';
@use 'sass:math';

:host {

    display : inline-block;

    width   : fit-content;
    height  : fit-content;

    & .label {

        @include theme.commonFont('body');

        cursor                      : pointer;

        transition                  : color .25s ease;

        -webkit-tap-highlight-color : transparent;

        &.active {
            color : theme.hex('active-label');
        }

        &.inactive {
            color : theme.hex('inactive-label');
        }
    }

    & > .minimal {

        $ballSize      : 1.25;

        width          : fit-content;
        height         : fit-content;

        display        : grid;
        grid-auto-flow : column;
        grid-gap       : utils.fes(.65 + math.div($ballSize, 2));
        align-items    : center;

        & > .switch {

            position                    : relative;

            display                     : block;
            width                       : utils.fes($ballSize * 1.5);
            height                      : utils.fes($ballSize);

            cursor                      : pointer;

            border-radius               : utils.maxValue();

            box-sizing                  : content-box;
            padding                     : 0 utils.fes(math.div($ballSize, 2));
            margin                      : 0 utils.fes(-(math.div($ballSize, 2)));

            -webkit-tap-highlight-color : transparent;

            & > .line {

                $height       : .25;

                display       : block;

                position      : absolute;
                top           : utils.fes(math.div($ballSize, 2) - math.div($height, 2));
                left          : utils.fes(math.div($ballSize, 2));
                right         : utils.fes(math.div($ballSize, 2));

                height        : utils.fes($height);

                border-radius : utils.maxValue();

                transition    : background-color .25s ease;
            }

            & > .ball {

                display       : block;

                position      : absolute;
                top           : 0;
                left          : utils.fes(math.div($ballSize, 2));

                width         : utils.fes($ballSize);
                height        : utils.fes($ballSize);

                box-sizing    : border-box;

                border-radius : utils.maxValue();

                box-shadow    : 0 utils.fes(.2) utils.fes(.4) rgba(0, 0, 0, 0.16), 0 utils.fes(.2) utils.fes(.4) rgba(0, 0, 0, 0.23);

                transition    : transform .25s ease, border .25s ease, background-color .25s ease;
            }

            &.left {

                &:focus {
                    outline        : utils.fes(.13) solid theme.hex('minimal-line-left');
                    outline-offset : utils.fes(.15);
                    transition     : outline-color .25s ease;
                }

                & > .line {
                    background-color : theme.hex('minimal-line-left');
                }

                & > .ball {
                    transform        : translateX(-50%);
                    border           : utils.fes(.45) solid theme.hex('minimal-outer-ball-left');
                    background-color : theme.hex('minimal-inner-ball-left');
                }
            }

            &.right {

                &:focus {
                    outline        : utils.fes(.13) solid theme.hex('minimal-line-right');
                    outline-offset : utils.fes(.15);
                    transition     : outline-color .25s ease;
                }

                & > .line {
                    background-color : theme.hex('minimal-line-right');
                }

                & > .ball {
                    transform        : translateX(utils.fesOp($ballSize * 1.5, '- 50%'));
                    border           : utils.fes(.45) solid theme.hex('minimal-outer-ball-right');
                    background-color : theme.hex('minimal-inner-ball-right');
                }
            }
        }
    }

    & > .traditional {

        $ballSize      : 1.25;
        $borderWidth   : .13;
        $padding       : .2 + $borderWidth;

        display        : grid;
        grid-auto-flow : column;
        grid-gap       : utils.fes(.65);
        align-items    : center;

        width          : fit-content;
        height         : fit-content;

        & > .switch {

            position                    : relative;

            width                       : utils.fes(($ballSize * 2.5) + ( 2 * $padding));
            height                      : utils.fes(($ballSize) + ( 2 * $padding));

            box-sizing                  : border-box;
            padding                     : utils.fes($padding);

            border-radius               : utils.maxValue();

            cursor                      : pointer;

            -webkit-tap-highlight-color : transparent;

            &:after {

                content       : '';

                display       : block;

                position      : absolute;
                left          : 0;
                top           : 0;
                right         : 0;
                bottom        : 0;

                border-radius : utils.maxValue();

                box-sizing    : border-box;

                transition    : background-color .25s ease, border .25s ease;
            }

            & > .ball-wrapper {

                position   : relative;
                z-index    : 1;

                width      : utils.fes($ballSize);
                height     : utils.fes($ballSize);

                transition : transform .35s cubic-bezier(0, 0.55, 0.45, 1);

                & > .ball {

                    display       : grid;
                    place-items   : center;

                    width         : 100%;
                    height        : 100%;

                    border-radius : utils.maxValue();

                    box-shadow    : 0 utils.fes(.2) utils.fes(.4) rgba(0, 0, 0, 0.16), 0 utils.fes(.2) utils.fes(.4) rgba(0, 0, 0, 0.23);

                    transition    : background-color .25s ease, color .25s ease;

                    @include theme.inlineIcon(utils.fes(.75));
                }
            }

            &.left {

                &:focus {
                    outline        : utils.fes(.1) solid theme.hex('traditional-border-left');
                    outline-offset : utils.fes(.15);
                    transition     : outline-color .25s ease;
                }

                & > .ball-wrapper {

                    transform : translateX(0);

                    & > .ball {
                        color            : theme.hex('traditional-icon-left');
                        background-color : theme.hex('traditional-ball-left');
                    }
                }

                &:after {
                    background-color : theme.hex('traditional-background-left');
                    border           : utils.fes($borderWidth) solid theme.hex('traditional-border-left');
                }
            }

            &.right {

                &:focus {
                    outline        : utils.fes(.1) solid theme.hex('traditional-border-right');
                    outline-offset : utils.fes(.15);
                    transition     : outline-color .25s ease;
                }

                & > .ball-wrapper {

                    transform : translateX(utils.fes($ballSize * 1.5));

                    & > .ball {
                        color            : theme.hex('traditional-icon-right');
                        background-color : theme.hex('traditional-ball-right');
                    }
                }

                &:after {
                    background-color : theme.hex('traditional-background-right');
                    border           : utils.fes($borderWidth) solid theme.hex('traditional-border-right');
                }
            }
        }
    }
}
