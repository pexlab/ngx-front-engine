@use 'assets/fe-styles/theme' with ($scope: 'alert-portal');
@use 'assets/fe-styles/utils';

@mixin style($type) {

    & > .alert.#{$type} {

        width         : 100%;
        height        : fit-content;

        will-change   : height, margin, opacity;

        margin-bottom : utils.rem(.65);

        & > .wrapper {

            position : relative;

            width    : 100%;
            height   : fit-content;

            & > .content {

                width                 : 100%;

                display               : grid;
                grid-auto-flow        : column;
                grid-template-columns : utils.rem(2.25) 1fr;
                align-items           : center;

                & > .icon {

                    width                     : 100%;
                    height                    : 100%;

                    display                   : grid;
                    place-items               : center;

                    color                     : theme.hex($type + '-icon');

                    @include theme.commonFont('decorative');
                    font-size                 : utils.rem(1.25);

                    user-select               : none;

                    background-color          : theme.hex($type + '-icon-background');

                    border-top-left-radius    : utils.rem(.65);
                    border-bottom-left-radius : utils.rem(.65);

                    @include theme.inlineIcon(utils.rem(1.25));
                }

                & > .text {

                    width                      : 100%;

                    display                    : grid;
                    grid-auto-flow             : row;
                    grid-gap                   : utils.rem(.2);

                    box-sizing                 : border-box;

                    padding                    : utils.rem(.65);

                    border-top                 : utils.rem(.15) solid theme.hex($type + '-icon-background');
                    border-right               : utils.rem(.15) solid theme.hex($type + '-icon-background');
                    border-bottom              : utils.rem(.15) solid theme.hex($type + '-icon-background');

                    border-top-right-radius    : utils.rem(.65);
                    border-bottom-right-radius : utils.rem(.65);

                    background-color           : theme.hex($type + '-background');

                    & > span.title {

                        color : theme.hex($type + '-title');

                        @include theme.commonFont('subheading');
                    }

                    & > span.description {

                        color       : theme.hex($type + '-description');

                        @include theme.commonFont('caption');

                        white-space : pre-line;
                    }

                    & > code.code_embed {

                        width            : utils.opRem('100% -', .3);
                        max-height       : utils.rem(15);

                        margin-top       : utils.rem(.31);

                        padding          : utils.rem(.31);
                        border-radius    : utils.rem(.31);

                        overflow-x       : auto;

                        box-sizing       : border-box;

                        @include theme.commonFont('code');
                        white-space      : pre;

                        @include theme.scrollbar(theme.hex($type + '-code-border'), theme.hex($type + '-code-border'), transparent, 'none', utils.rem(.5), utils.rem(.25));

                        color            : theme.hex($type + '-code');
                        border           : utils.rem(.06) solid theme.hex($type + '-code-border');
                        background-color : theme.hex($type + '-code-background');
                    }
                }
            }
        }
    }
}

:host {

    width          : 100%;

    display        : grid;
    grid-auto-flow : row;

    & > .wrapper {

        /* Transition delay only applies if no elements remain */

        margin           : 0;
        transition       : margin .5s ease;
        transition-delay : .5s;

        &.hasElements {
            /* Note: we subtract the last element's margin bottom */
            margin           : var(--fe-alert-margin-top) 0 utils.opRem('var(--fe-alert-margin-bottom) -', .65) 0;
            transition-delay : 0s;
        }

        @each $t in ('generic', 'info', 'success', 'warning', 'error') {
            @include style($t);
        }
    }
}
