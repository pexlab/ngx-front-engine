@use 'assets/fe-styles/theme' with ($scope: 'button');
@use 'assets/fe-styles/utils';
@use 'sass:math';

:host {

    display     : grid;
    place-items : center;

    width       : fit-content;
    height      : fit-content;

    user-select : none;

    & > button {

        text-decoration             : none;
        border                      : none;
        background                  : none;
        padding                     : 0;

        -webkit-tap-highlight-color : transparent;

        &:focus {
            outline        : utils.fes(.1) solid theme.hex('background');
            outline-offset : utils.fes(.15);
        }
    }

    & > button.simple,
    & > button.raised-simple,
    & > button.pill,
    & > button.raised-pill,
    & > button.artistic-curves,
    & > button.see-through-light,
    & > button.see-through-dark {

        position      : relative;

        display       : block;

        overflow      : hidden;

        padding       : utils.fes(.75) utils.fes(1.25);

        border-radius : utils.fes(.5);

        cursor        : pointer;

        line-height   : utils.fes(1.3);

        color         : theme.hex('text');
        background    : theme.hex('background');

        & > .content {

            position       : relative;
            z-index        : 1;

            display        : grid;
            grid-auto-flow : column;
            grid-gap       : utils.fes(.5);
            align-items    : center;

            @include theme.commonFont('body');
            @include theme.inlineDeepIcon(utils.fes(1.3));
        }

        transition    : box-shadow .25s ease-in-out;

        & > .gradient {
            pointer-events : none;
            opacity        : 0;
            z-index        : 0;
            content        : '';
            display        : block;
            position       : absolute;
            left           : 0;
            top            : 0;
            bottom         : 0;
            right          : 0;
            background     : linear-gradient(to bottom, rgba(white, .2), rgba(white, 0));
            transition     : opacity .25s ease;
        }

        @include utils.hover {
            & > .gradient {
                opacity : 1;
            }
        }
    }

    & > button.raised-simple {
        border-bottom : utils.fes(.2) solid theme.hex('border-bottom');
    }

    & > button.circle, & > button.circle-hover, & > button.circle-hover-with-fallback {

        position       : relative;

        display        : grid;
        grid-auto-flow : row;
        grid-gap       : utils.fes(.5);
        justify-items  : center;

        cursor         : pointer;

        color          : theme.hex('circle-tooltip-text');

        border-radius  : utils.fes(math.div(1.3, 2) + 1.25);

        @include theme.commonFont('body');

        &::ng-deep {

            & > span {

                position    : absolute;

                left        : 50%;
                bottom      : 0;

                white-space : nowrap;

                opacity     : 0;
                transform   : translateY(100%) translateX(-50%);
                transition  : opacity .25s ease, transform .25s ease;
            }

            & > svg-icon {

                position      : relative;

                width         : utils.fes(3);
                height        : utils.fes(3);

                display       : grid;
                place-items   : center;

                border-radius : utils.fes(math.div(1.3, 2) + 1.25);
                overflow      : hidden;

                color         : theme.hex('text');
                background    : theme.hex('background');

                & > svg {
                    width  : utils.fes(1.3);
                    height : utils.fes(1.3);
                }

                &:after {
                    pointer-events : none;
                    opacity        : 0;
                    z-index        : 0;
                    content        : '';
                    display        : block;
                    position       : absolute;
                    left           : 0;
                    top            : 0;
                    bottom         : 0;
                    right          : 0;
                    background     : linear-gradient(to bottom, rgba(white, .2), rgba(white, 0));
                    transition     : opacity .25s ease;
                }
            }
        }

        @include utils.hover {
            &::ng-deep {
                & > svg-icon:after {
                    opacity : 1;
                }
            }
        }
    }

    & > button.circle {
        &::ng-deep {
            & > span {
                opacity   : 1;
                transform : translateY(utils.opFes('100% +', .25)) translateX(-50%);
            }
        }
    }

    & > button.circle-hover {

        &::ng-deep {
            & > span {
                pointer-events : none;
            }
        }

        @include utils.hover {
            &::ng-deep {
                & > span {
                    opacity   : 1;
                    transform : translateY(utils.opFes('100% +', .25)) translateX(-50%);
                }
            }
        }
    }

    & > button.circle-hover-with-fallback {

        &::ng-deep {
            & > span {
                pointer-events : none;
            }
        }

        @include utils.hoverOrAlways {
            &::ng-deep {
                & > span {
                    pointer-events : visible;
                    opacity        : 1;
                    transform      : translateY(utils.opFes('100% +', .25)) translateX(-50%);
                }
            }
        }

        @include utils.hover {
            &::ng-deep {
                & > span {
                    pointer-events : none;
                }
            }
        }
    }

    & > button.pill {
        padding       : utils.fes(.7) utils.fes(1);
        border-radius : utils.fes(math.div(1.3, 2) + .75);
    }

    & > button.raised-pill {
        padding       : utils.fes(.7) utils.fes(1);
        border-radius : utils.fes(math.div(1.3, 2) + .7 + .2);
        border-bottom : utils.fes(.2) solid theme.hex('border-bottom');
    }

    & > button.hinge {

        width            : utils.fes(12);
        height           : fit-content;

        display          : grid;
        place-items      : center;

        box-sizing       : border-box;
        padding          : utils.fes(1);
        border-radius    : utils.fes(1);

        color            : theme.hex('text');

        background-color : theme.hex('background');

        user-select      : none;
        cursor           : pointer;

        transition       : width .25s ease, box-shadow .25s ease, background-color .25s ease, color .25s ease;

        & > .content {

            width           : 100%;
            height          : fit-content;

            display         : flex;
            align-items     : center;
            justify-items   : center;
            justify-content : left;

            ::ng-deep {

                & > svg-icon {

                    width       : utils.fes(1.3);
                    height      : utils.fes(1.3);

                    display     : grid;
                    place-items : center;

                    & > svg {
                        width  : utils.fes(1.3);
                        height : utils.fes(1.3);
                    }
                }

                & > span {

                    display       : block;

                    width         : 100%;

                    overflow      : hidden;
                    text-overflow : ellipsis;
                    white-space   : nowrap;

                    line-height   : utils.fes(1.3);

                    @include theme.commonFont('body');
                }
            }
        }

        @include utils.hover {

            width      : utils.fes(13);

            color      : theme.hex('hinge-hover-text');
            background : theme.hex('hinge-hover-background');

            box-shadow : 0 utils.fes(.2) utils.fes(.4) rgba(0, 0, 0, 0.16), 0 utils.fes(.2) utils.fes(.4) rgba(0, 0, 0, 0.23);
        }
    }

    & > button.artistic-curves {

        padding       : utils.fes(1) utils.fes(2);

        border-radius : utils.fes(1.5) utils.fes(.5) utils.fes(1.5) utils.fes(.5);

        border-bottom : utils.fes(.2) solid theme.hex('border-bottom');
    }

    & > button.see-through-light,
    & > button.see-through-dark {
        backdrop-filter : blur(7px);
    }

    & > button.see-through-light {

        &:focus {
            outline-color : rgba(white, .7);
        }

        @supports (backdrop-filter : blur(7px)) {
            & {
                color      : theme.hex('text');
                background : rgba(white, .4);
            }
        }

        @supports not (backdrop-filter : blur(7px)) {
            & {
                color      : black;
                background : rgba(white, .7);
            }
        }
    }

    & > button.see-through-dark {

        &:focus {
            outline-color : rgba(lighten(black, 15%), .7);
        }

        @supports (backdrop-filter : blur(7px)) {
            & {
                color      : theme.hex('text');
                background : rgba(black, .4);
            }
        }

        @supports not (backdrop-filter : blur(7px)) {
            & {
                color      : white;
                background : rgba(black, .7);
            }
        }
    }

    & > button.handwritten {

        opacity        : .8;

        width          : fit-content;

        display        : grid;
        grid-auto-flow : column;
        grid-gap       : utils.fes(.5);
        align-items    : center;

        border         : utils.fes(.15) solid theme.commonHex('text-secondary');
        border-radius  : utils.fes(17) utils.fes(1) utils.fes(17) utils.fes(1) / utils.fes(1) utils.fes(17) utils.fes(1) utils.fes(17);

        cursor         : pointer;

        padding        : utils.fes(.75) utils.fes(1.25);

        color          : theme.commonHex('text-secondary');

        transition     : padding .4s cubic-bezier(0.34, 1.56, 0.64, 1);

        @include theme.commonFont('handwritten-body');
        @include theme.inlineDeepIcon(utils.fes(1.3));

        @include utils.hover {
            padding         : utils.fes(.75) utils.fes(2);
            text-decoration : underline solid rgba(#41403E, .5);
        }

        &:focus {
            outline : none;
        }
    }
}
