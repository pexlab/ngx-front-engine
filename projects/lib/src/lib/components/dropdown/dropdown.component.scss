@use 'assets/fe-styles/theme' with ($scope: 'dropdown');
@use 'assets/fe-styles/utils';
@use 'sass:math';

@forward 'assets/fe-styles/theme';
@forward 'assets/fe-styles/utils';

$DROPDOWN_PADDING_VERTICAL   : 1;
$DROPDOWN_PADDING_HORIZONTAL : 1.5;
$PLACEHOLDER_HEIGHT          : 2.5;
$OPTION_PADDING              : .65;

:host {

    position    : relative;

    display     : block;

    box-sizing  : border-box;

    width       : fit-content;
    height      : utils.rem($PLACEHOLDER_HEIGHT);

    user-select : none;

    /* Isolated stacking context for the placeholder panel and options hierarchy */
    isolation   : isolate;

    @include theme.commonFont('body');

    &.inline {
        margin-left  : utils.rem($DROPDOWN_PADDING_HORIZONTAL);
        margin-right : utils.rem($DROPDOWN_PADDING_HORIZONTAL);
    }

    & > * {
        margin : 0;
    }

    & > .placeholderPanel {

        z-index                     : 2;

        position                    : relative;

        user-select                 : none;
        cursor                      : pointer;

        width                       : fit-content;
        height                      : utils.rem($PLACEHOLDER_HEIGHT);

        padding                     : 0 utils.rem(1);
        box-sizing                  : border-box;

        display                     : grid;
        grid-template-columns       : 1fr auto;
        grid-gap                    : utils.rem(.65);
        place-items                 : center;

        white-space                 : nowrap;

        color                       : theme.hex('placeholder-idle-panel-text');
        border                      : utils.rem(.15) solid theme.hex('placeholder-idle-panel-border');
        background                  : theme.hex('placeholder-idle-panel-background');

        border-radius               : utils.maxValue();

        transition                  : border-color .25s ease, color .25s ease, background-color .25s ease, box-shadow .25s ease;

        @include theme.inlineIcon(utils.rem(1));

        -webkit-tap-highlight-color : transparent;

        &:focus {
            outline        : utils.rem(.1) solid theme.hex('placeholder-idle-panel-border');
            outline-offset : utils.rem(.15);
        }

        &::after {
            opacity       : 0;
            position      : absolute;
            content       : '';
            display       : block;
            left          : utils.rem(-.1);
            top           : utils.rem(-.2);
            bottom        : utils.rem(-.2);
            right         : utils.rem(-.1);
            border-radius : utils.maxValue();
            box-sizing    : border-box;
            border-bottom : utils.rem(.2) solid theme.hex('placeholder-border-bottom');
            transition    : opacity .25s ease;
        }

        &.passive-raised:not(.selected)::after {
            opacity : 1;
        }

        &.selected.active-raised::after {
            opacity : 1;
        }

        &.always-raised::after {
            opacity : 1;
        }

        &.selected {

            color      : theme.hex('placeholder-selected-panel-text');
            border     : utils.rem(.15) solid theme.hex('placeholder-selected-panel-border');
            background : theme.hex('placeholder-selected-panel-background');

            box-shadow : 0 utils.rem(.9) utils.rem(1.75) rgba(0, 0, 0, 0.15), 0 utils.rem(.65) utils.rem(.65) rgba(0, 0, 0, 0.12);
        }

        & > ::ng-deep div {

            display        : grid;
            grid-auto-flow : column;
            grid-gap       : utils.rem(.65);
            align-items    : center;

            width          : fit-content;
            height         : fit-content;

            @include theme.inlineIcon(utils.rem(1.25));
        }
    }

    & > .options {

        opacity        : 1;

        z-index        : 1;

        position       : absolute;

        top            : utils.rem(math.div($PLACEHOLDER_HEIGHT, 2));
        left           : utils.rem(-$DROPDOWN_PADDING_HORIZONTAL);

        display        : grid;
        grid-auto-flow : row;

        min-width      : utils.rem(12);
        width          : utils.opRem('100% +', ($DROPDOWN_PADDING_HORIZONTAL * 2) + ($OPTION_PADDING * 2));

        margin         : 0;
        padding-top    : utils.rem(math.div($PLACEHOLDER_HEIGHT, 2) + $DROPDOWN_PADDING_VERTICAL + .2 + $OPTION_PADDING);

        overflow       : hidden;

        border-radius  : utils.rem(.31);

        background     : theme.hex('options-idle-background');

        box-shadow     : 0 utils.rem(.06) utils.rem(.2) rgba(0, 0, 0, 0.12), 0 utils.rem(.06) utils.rem(.15) rgba(0, 0, 0, 0.24);

        transition     : background .25s ease;

        &:before {

            content    : '';

            position   : absolute;

            top        : 0;
            left       : 0;

            width      : 100%;
            height     : utils.rem(.2);

            background : theme.hex('options-stripe');
        }

        & > .clear-value {

            $padding_top                : math.div($PLACEHOLDER_HEIGHT, 2) + $DROPDOWN_PADDING_VERTICAL;

            position                    : absolute;

            top                         : utils.rem(.2 + math.div($OPTION_PADDING, 2));
            right                       : utils.rem($OPTION_PADDING);

            display                     : grid;
            place-items                 : center;

            width                       : utils.rem($padding_top);
            height                      : utils.rem($padding_top);

            margin                      : 0; /* Idk why but the margin from the parent is being applied to the children as well */

            border-radius               : utils.maxValue();

            color                       : theme.hex('clear-button-idle');
            background                  : theme.hex('clear-button-idle-background');

            transition                  : background-color .25s ease, color .25s ease;

            @include theme.inlineIcon(utils.rem(1.15));

            @include utils.hover {
                color      : theme.hex('clear-button-hover');
                background : theme.hex('clear-button-hover-background');
            }

            -webkit-tap-highlight-color : transparent;

            &:focus {
                outline : none;
            }
        }

        ::ng-deep {
            & > * {
                cursor : pointer;
            }
        }

        &.disabled {
            ::ng-deep {
                & > * {
                    cursor : not-allowed;
                }
            }
        }
    }
}
